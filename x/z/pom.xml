<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>quartetfs.biz.pivot</groupId>
	<artifactId>activepivot-sandbox</artifactId>
	<packaging>war</packaging>
	<version>4.4.8</version>
	<name>ActivePivot Sandbox Web Application</name>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>quartetfs.biz.pivot</groupId>
				<artifactId>activepivot-server</artifactId>
				<version>2.4.8</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- ActivePivot Dependencies -->
		<dependency>
			<groupId>quartetfs.biz.pivot</groupId>
			<artifactId>activepivot-server-spring</artifactId>
		</dependency>
		
		<!-- Composer dependencies are provided in QFS artifacts     -->
		<!-- And must be explicitly declared in application projects -->
		<dependency>
			<groupId>quartetfs.composer</groupId>
			<artifactId>composer-intf</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>quartetfs.composer</groupId>
			<artifactId>composer-impl</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- Required by the Spring Framework to parse @Configuration classes -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
		</dependency>

		<!-- Component dependencies -->
		<dependency>
			<groupId>i18nlog</groupId>
			<artifactId>i18nlog</artifactId>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlets</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- The Web Services client library -->
		<dependency>
			<groupId>quartetfs.biz.pivot</groupId>
			<artifactId>activepivot-ws-client</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<!-- JDK 7 is required for the Sandbox Application -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>ISO-8859-15</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>ISO-8859-15</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>generate-message-bundles</id>
						<phase>process-classes</phase>
						<configuration>
							<target>
								<!-- generate the I18N resource bundles -->
								<taskdef name="i18n" classpathref="maven.compile.classpath" classname="mazz.i18n.ant.I18NAntTask" />
								<i18n outputdir="${project.build.outputDirectory}" defaultlocale="en" verbose="false" verify="true">
									<classpath refid="maven.compile.classpath" />
									<classfileset dir="${project.build.outputDirectory}">
										<include name="**/*.class" />
									</classfileset>
								</i18n>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>

					<execution>
						<id>generate-xsd-files</id>
						<phase>process-classes</phase>
						<configuration>
							<target>
								<echo>Generate ActivePivot XSD files</echo>
								<java classpathref="maven.compile.classpath" classname="com.quartetfs.biz.pivot.server.impl.XmlSchemaGenerator">
									<arg value="${basedir}/src/main/resources/" />
								</java>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					
				</executions>
			</plugin>

			<!-- Javadoc Configuration (aggregate from all Quartet FS dependencies) -->
			<!-- Run "mvn javadoc:aggregate-jar" from command line to execute       -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<show>public</show>
					<excludePackageNames>*.mondrian.*:</excludePackageNames>
					<includeDependencySources>true</includeDependencySources>
					<dependencySourceIncludes>
						<dependencySourceInclude>quartetfs.composer:*</dependencySourceInclude>
						<dependencySourceInclude>quartetfs.tech.streaming:*</dependencySourceInclude>
						<dependencySourceInclude>quartetfs.tech.indexer:*</dependencySourceInclude>
						<dependencySourceInclude>quartetfs.biz.pivot:*</dependencySourceInclude>
					</dependencySourceIncludes>
				</configuration>
			</plugin>

			<!-- Assembly plugin to package all the sandbox dependencies ('mvn assembly:assembly') -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>
				<!-- Workaround for m2e unsupported plugins -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

</project>